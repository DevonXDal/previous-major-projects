@using EarnShardsForCards.Shared.Data.GinRummy
@using EarnShardsForCards.Shared.Data.GenericGameObjects
@using EarnShardsForCards.Client.Data

@inherits SubscriberComponent

<div style="position: relative; text-align: center" ondragover="event.preventDefault();" draggable="false" ondrop="@(() => HandleDrop())" ondblclick="@(()=> HandleDoublePress())">
    @* https://stackoverflow.com/questions/26148740/how-to-add-text-over-the-image-in-bootstrap *@
    <img src="@_discardPileImageFilePath" class="img-fluid" style="align-self: center" />
</div>


@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    [Parameter]
    public GinRummyController Controller { get; set; }

    [Parameter]
    public Notifier Notifier { get; set; }

    private TurnState? _turnState;

    private PhaseState? _phaseState;

    private string? _discardPileImageFilePath;

    protected override async Task OnInitializedAsync()
    {
        FetchNewData();
        Notifier.Subscribe(this);

        await base.OnInitializedAsync();
    }

    public override void Notify()
    {
        FetchNewData();
        StateHasChanged();
    }

    private void FetchNewData()
    {
        var viewData = Controller.FetchViewData();

        _discardPileImageFilePath = viewData.DiscardPileImageFilePath;

        _turnState = viewData.CurrentTurn;
        _phaseState = viewData.CurrentPhase;
    }

    public void HandleDoublePress()
    {
        try
        {
            Controller.RequestDrawFromDiscard();
        } catch (InvalidOperationException e)
        {
            ModalParameters parameters = new ModalParameters();
            parameters.Add(nameof(InformativeModalData.TextBody), e.Message);

            Modal.Show<InformativeModalData>("Could not Draw from the Discard Pile", parameters);
        }
    }

    public async Task HandleDrop()
    {
        try
        {
            await Controller.RequestDiscardWithCardAtAsync(Controller.SelectedCardIndex);
        } catch (InvalidOperationException e)
        {
            ModalParameters parameters = new ModalParameters();
            parameters.Add(nameof(InformativeModalData.TextBody), e.Message);

            Modal.Show<InformativeModalData>("Could not Discard That Card", parameters);
        }
    }
}